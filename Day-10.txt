Assignment No.02 Practicing Directive
----------------------------------------------------------
<li>Add A button which says 'Display Details'</li>
<li>Add a paragraph with any content of your choice (e.g. 'Secret Password = tuna')</li>
<li>Toggle the displaying of that paragraph with the button created in the first step</li>
<li>Log all button clicks in an array and output that array below the secret paragraph (maybe log a
           timestamp or simply an incrementing number)</li>
<li>Starting at the 5th log item, give all future log items a blue background (via ngStyle) and white
           color (ngClass)</li>
-------------------------------------------------------------
HTML:
<div class="container">
    <div class="row">
        <div class="col-xs-12">
           
            <!-- <button class="btn btn-primary" (click)="showSecret = !showSecret">Display Details</button> -->
            <button class="btn btn-primary" (click)="onToggleDetails()">Display Details</button>
            <p *ngIf="showSecret">Secret Password = tuna</p>
            <div *ngFor="let logItem of log"
             [ngStyle]="{backgroundColor: logItem >= 5 ? 'blue':'transparent' }" 
             [ngClass]="{'white-text': logItem >= 5}">
             {{logItem}}
            </div>
        </div>
    </div>
</div>

TS FILE:
showSecret = false;
log = [];
  constructor() { }

  ngOnInit() {
  }
  onToggleDetails() {
    this.showSecret = !this.showSecret;
    this.log.push(this.log.length + 1) ;
  }

CSS File:
.white-text {
    color: white;
}

------------------------------------------------------------------
Hooks of component:[NEXT PART-1]

3.ngOnInit:
	-after completion of dom element execuation then it will call ngOnInit 

4.ngDoCheck:
	-Change detection if it is not found then we can go for ngDoCheck
	-to handle change detection then we will go ngDOCheck.
	-It will call every time if change detection found.
	EX-Google Search --> If i Type s--> number of data find.

parent.html:	
<div class="row" style="text-align:center;">
  <div class="col-md-12">
<input type="text" placeholder="enter value" (blur)="handleData($event)">

<p>Product Name: <input type="text" placeholder="Enter product name" [(ngModel)]="name"></p>
<p>Product Price: <input type="text" placeholder="Enter product price" [(ngModel)]="price"></p>
<button class="btn btn-primary" (click)="updateProduct()">Update product</button>
<app-hooks [userid]="uid" [parentData]="data" [product]="product"></app-hooks>
</div>

parent.ts:
data;
handleData(value) {
    this.data = value.target.value;
  }
  updateProduct() {
    //this.product = new Product();
    this.product.name = this.name;
    this.product.price = this.price;
  }
data;
  name: string;
  price: number;
  product: Product = new Product();
